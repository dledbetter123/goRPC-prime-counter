syntax = "proto3";

package primes;

option go_package = "github.com/dledbetter123/distributed-prime-counter/pkg/primespb";

service FileServer {
  rpc GetFileChunk(JobRequest) returns (stream FileChunk);
  rpc Shutdown (ShutdownRequest) returns (Ack);
}

service Dispatcher {
  rpc GetJob (JobRequest) returns (Job);
  rpc RegisterWorker (RegisterWorkerRequest) returns (WorkerID);
  rpc ReportCompletion (JobCompletion) returns (Ack); // New RPC for reporting job completions
  rpc ShutdownSignal (ShutdownRequest) returns (Ack);
}

service Consolidator {
  rpc SendResult (Result) returns (Ack);
  rpc Shutdown (ShutdownRequest) returns (Ack);
}

message RegisterWorkerRequest {
  string workerType = 1; // Optional: Type of worker if needed.
}

message ShutdownRequest {}

message JobCompletion {
  string workerId = 1;
  int32 totalPrimes = 2; // Total primes counted in the completed job
}

message WorkerDoneRequest {
  // To facilitate workers letting the dispatcher and Consolidator know when they're finished.
}

message WorkerID {
  string id = 1;
}

message JobRequest {
  string workerId = 1;
  Job job = 2;
}

message Job {
  string pathname = 1;
  int64 start = 2;    
  int32 length = 3;
}

message FileChunk {
  bytes chunkData = 1;
}

message Result {
  string jobId = 1; 
  int32 count = 2; // Count of primes found in a job
}

message Ack {
  bool success = 1;
  string message = 2; // Optional message for more detailed response
}
